plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
}
 
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
 
archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group
 
minecraft {
}

repositories {
	 maven {
        name "jitpack"
        url "https://jitpack.io"
    }
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    maven {
		name = "Ladysnake Libs"
		url = "https://maven.shedaniel.me/"
    }
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/releases/"
	}
    jcenter()
}
 
dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	
	modImplementation ("net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}")
	
	modImplementation ("net.fabricmc:fabric-loader:${project.loader_version}") { exclude module: 'fabric-api' }
 
	modImplementation include("io.github.cottonmc:LibGui:${project.libgui_version}") { exclude module: 'fabric-api' }

	modImplementation ("com.terraformersmc:modmenu:${project.modmenu_version}") { exclude module: 'fabric-api' }

	include ("me.shedaniel.cloth:cloth-config-fabric:${project.clothconfig_version}") { exclude module: 'fabric-api' }

	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.clothconfig_version}") { exclude module: 'fabric-api' }
}
 
processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}
 
// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}
 
// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}
 
jar {
	from "LICENSE"
}
 
// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar"){
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}
 
	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}